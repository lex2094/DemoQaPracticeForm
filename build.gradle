plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    slf4jVersion = "1.7.32"

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:6.7.2",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.9.0",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'com.github.javafaker:javafaker:1.0.2',
            'org.assertj:assertj-core:3.21.0',
            'com.codeborne:pdf-test:1.7.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            'com.google.code.gson:gson:2.10'
    )
}


tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {}

